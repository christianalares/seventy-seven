// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TEAM_ROLE_ENUM {
  OWNER
  MEMBER
}

model User {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?    @db.Timestamptz(6)
  email           String       @unique @db.VarChar
  full_name       String
  image_url       String?
  current_team_id String       @db.Uuid
  current_team    Team         @relation(fields: [current_team_id], references: [id])
  teams           UserOnTeam[]
  messages        Message[]

  @@map("users")
}

model Team {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?    @db.Timestamptz(6)
  name          String
  image_url     String?
  members       UserOnTeam[]
  current_users User[]
  tickets       Ticket[]
  is_personal   Boolean      @default(false)

  @@map("teams")
}

model UserOnTeam {
  user_id String         @db.Uuid
  team_id String         @db.Uuid
  role    TEAM_ROLE_ENUM
  team    Team           @relation(fields: [team_id], references: [id], onDelete: Cascade)
  user    User           @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([user_id, team_id])
  @@unique([user_id, team_id])
  @@map("users_on_teams")
}

model Ticket {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
  team_id           String    @db.Uuid
  team              Team      @relation(fields: [team_id], references: [id])
  subject           String
  sender_full_name  String
  sender_email      String
  sender_avatar_url String?
  meta              Json?
  messages          Message[]

  @@map("tickets")
}

model Message {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  ticket_id       String    @db.Uuid
  ticket          Ticket    @relation(fields: [ticket_id], references: [id])
  sent_by_user_id String?   @db.Uuid
  sent_by_user    User?     @relation(fields: [sent_by_user_id], references: [id])
  body            String

  @@map("messages")
}
